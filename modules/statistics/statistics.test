<?php
// $Id: statistics.test,v 1.11 2009/08/22 09:44:55 dries Exp $

class StatisticsBlockVisitorsTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Top visitor blocking',
      'description' => 'Tests blocking of IP addresses via the top visitors report.',
      'group' => 'Statistics'
    );
  }

  function setUp() {
    parent::setUp('statistics');

    // Create user.
    $this->blocking_user = $this->drupalCreateUser(array('block IP addresses', 'access statistics'));

    // Insert dummy access by anonymous user into access log.
    db_insert('accesslog')
      ->fields(array(
        'title' => 'test',
        'path' => 'node/1',
        'url' => 'http://example.com',
        'hostname' => '192.168.1.1',
        'uid' => 0,
        'sid' => 10,
        'timer' => 10,
        'timestamp' => REQUEST_TIME,
      ))
      ->execute();
  }

  /**
   * Blocks an IP address via the top visitors report then uses the same page to unblock it.
   */
  function testIPAddressBlocking() {
    // IP address for testing.
    $test_ip_address = '192.168.1.1';

    // Enable access logging (redundant since we insert the data manually).
    variable_set('statistics_enable_access_log', 1);

    // Verify the IP address from accesslog appears on the top visitors page
    // and that a 'block IP address' link is displayed.
    $this->drupalLogin($this->blocking_user);
    $this->drupalGet('admin/reports/visitors');
    $this->assertText($test_ip_address, t('IP address found.'));
    $this->assertText(t('block IP address'), t('Block IP link displayed'));

    // Block the IP address.
    $this->clickLink('block IP address');
    $this->assertText(t('IP address blocking'), t('IP blocking page displayed.'));
    $edit = array();
    $edit['ip'] = $test_ip_address;
    $this->drupalPost('admin/settings/ip-blocking', $edit, t('Save'));
    $ip = db_query("SELECT iid from {blocked_ips} WHERE ip = :ip", array(':ip' => $edit['ip']))->fetchField();
    $this->assertNotEqual($ip, FALSE, t('IP address found in database'));
    $this->assertRaw(t('The IP address %ip has been blocked.', array('%ip' => $edit['ip'])), t('IP address was blocked.'));

    // Verify that the block/unblock link on the top visitors page has been altered.
    $this->drupalGet('admin/reports/visitors');
    $this->assertText(t('unblock IP address'), t('Unblock IP address link displayed'));

    // Unblock the IP address.
    $this->clickLink('unblock IP address');
    $this->assertRaw(t('Are you sure you want to delete %ip?', array('%ip' => $test_ip_address)), t('IP address deletion confirmation found.'));
    $edit = array();
    $this->drupalPost('admin/settings/ip-blocking/delete/1', NULL, t('Delete'));
    $this->assertRaw(t('The IP address %ip was deleted.', array('%ip' => $test_ip_address)), t('IP address deleted.'));
  }
}
