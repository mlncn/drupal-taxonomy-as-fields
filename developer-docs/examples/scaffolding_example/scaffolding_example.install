<?php
// $Id: scaffolding_example.install,v 1.4 2008/10/12 08:52:37 davereid Exp $

/**
 * @file
 * Scaffolding example module's install and uninstall code.
 */

/**
 * Implementation of hook_install().
 *
 * This hook is called the first time the module is installed. Unless it is
 * explicitly uninstalled, disabling and re-enabling will not trigger this hook
 * a second time.
 */
function scaffolding_example_install() {
  drupal_install_schema('scaffolding_example');
}

/**
 * Implementation of hook_schema().
 *
 * This hook should return a SchemaAPI array with a full definition of the most
 * up-to-date version of the module's database tables.
 */
function scaffolding_example_schema() {
  $schema['scaffolding_record'] = array(
    'description' => t('Stores custom links to be added to nodes.'),
    'fields' => array(
      'record_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t('Unique identifier for the {scaffolding_record}.'),
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => t("The visible title of the {scaffolding_record}.")
      ),
      'content' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => t('A description of the term.'),
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => t('The weight of this {scaffolding_record}.'),
      ),
    ),
    'primary key' => array('record_id'),
  );
  return $schema;
}

/**
 * Implementation of hook_update_N().
 *
 * This function is responsible for updating the module's database tables when
 * a new version requires changes. (For example, if version 1.1 of the module
 * added a new field to the database).
 *
 * The numbers of your module's update functions should follow the pattern
 * hook_update_XYZZ, where X is the version of Drupal your module is compatible
 * with, Y is the major version of your module, and ZZ is the number of the
 * update. For example, the first update for version 1.x of this module would
 * be numbered 6100, while the first update for the 2.x version of the module
 * would be numbered 6200. For more details on update numbering conventions,
 * see http://drupal.org/node/114774#update-n.
 *
 * hook_update_N() functions only run when upgrading an already-installed module
 * to a new version, NOT when initially installing the module.
 */
function scaffolding_example_update_6100() {
  $new_column = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'size' => 'tiny',
    'description' => t('The weight of this {scaffolding_record}.'),
  );

  $ret = array();
  db_add_field($ret, 'scaffolding_record', 'weight', $new_column);
  return $ret;
}

/**
 * Implementation of hook_uninstall().
 *
 * This hook is called when the already-disabled module is explicitly uninstalled
 * by the administrator -- simple disabling the module will trigger hook_disable().
 * It should delete any database tables added by the module, remove any variables
 * that are unique to the module, and clear out any cached data.
 */
function scaffolding_example_uninstall() {
  drupal_uninstall_schema('scaffolding_example');
  cache_clear_all('scaffolding_example:*', 'cache', TRUE);
  variable_del('scaffolding_example_setting');
}
